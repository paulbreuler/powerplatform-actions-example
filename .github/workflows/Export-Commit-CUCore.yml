# This is a basic workflow to help you get started with Actions

name: Manual Export, unpack, and commit CUCore

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
   repository_dispatch: 
    types: [ export ]
   workflow_dispatch:
    inputs:
      DISPATCH_SOLUTION_NAME:
        description: 'Solution to export'
        required: true
        default: 'CUCore'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set input based on event type
        run: if( $env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') { write-host $env:SOLUTION_NAME = $env:${{ github.event.inputs.DISPATCH_SOLUTION_NAME }} }

      - name: export-solution action
        uses: microsoft/powerplatform-actions/export-solution@v0.1.7
        with:
          environment-url: 'https://orgdfc3d319.crm.dynamics.com/'
          user-name: ${{ secrets.USERNAME }}
          password-secret: ${{ secrets.PASSWORD }}
          solution-name: ${{ env.SOLUTION_NAME }}
          solution-output-file: out/exported/${{ env.SOLUTION_NAME }}.zip

      - name: unpack-solution action
        uses: microsoft/powerplatform-actions/unpack-solution@v0.1.7
        with:
          solution-file: out/exported/${{ env.SOLUTION_NAME }}.zip
          solution-folder: out/solutions/${{ env.SOLUTION_NAME }}
          solution-type: 'Unmanaged'
          overwrite-files: true

      - name: branch-solution, prepare it for a PullRequest
        uses: microsoft/powerplatform-actions/branch-solution@v0.1.7
        with:
          solution-folder: out/solutions/${{ env.SOLUTION_NAME }}
          solution-target-folder: solutions/${{ env.SOLUTION_NAME }}/content
          repo-token: ${{ secrets.GITHUBTOKEN }}
          allow-empty-commit: true
